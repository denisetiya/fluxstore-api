generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "cockroachdb"
  url      = env("DATABASE_URL")
}

// add user table part

model User {
  id          String  @id @default(cuid())
  name        String
  email       String  @unique
  password    String
  phoneNumber String?
  profilePic  String?
  superUser   Boolean @default(false)
  alamat      Alamat?
  comentsUser comentsProduct[]
}

model Alamat {
  id        String @id @default(cuid())
  idUser    String @unique
  provinsi  String
  kabupaten String
  kecamatan String
  kodepos   String
  detail    String
  user      User @relation(fields: [idUser], references: [id], onDelete: Cascade)
}

model CategoryProduct {
  id          String @id 
  nameCategory String
  subCategories SubCategoryProduct[]
}

model SubCategoryProduct {
  id              String @id 
  nameSubCategory String
  idCategory      String
  products        Product[]
  categoryProduct CategoryProduct @relation(fields: [idCategory], references: [id], onDelete: Cascade)
}

model Product {
  id                 String           @id @default(cuid())
  idSubCategory      String
  nameProduct        String
  priceProduct       Float
  descProduct        String?
  discountProduct    Float?
  starProduct        Float?
  gender             String?
  comentsProduct     comentsProduct[]
  productDetails     ProductDetail[]
  recommendedProduct Boolean          @default(false)
  subCategory        SubCategoryProduct @relation(fields: [idSubCategory], references: [id], onDelete: Cascade)
}

model ProductDetail {
  id             String       @id @default(cuid())
  idProduct      String
  colorProduct   String
  pictureProduct String
  sizes          Size[]
  product        Product @relation(fields: [idProduct], references: [id], onDelete: Cascade)
}

model Size {
  id             String        @id @default(cuid())
  idProductDetail String
  sizeProduct    String
  stockProduct   Int
  productDetail  ProductDetail @relation(fields: [idProductDetail], references: [id], onDelete: Cascade)
}

model comentsProduct {
  id        String @id @default(cuid())
  idProduct String
  idUser    String
  comment   String
  rating    Float
  created_at DateTime @default(now())
  user      User @relation(fields: [idUser], references: [id], onDelete: Cascade)
  product   Product @relation(fields: [idProduct], references: [id], onDelete: Cascade)
}